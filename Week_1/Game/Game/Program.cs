using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http.Headers;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Remoting.Activation;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using EZInput;

namespace Game
{
    internal class Program
    {
        static void Main(string[] args)
        {
            char[,] maze = new char[,]
            {
                {},
                {},
                {},
                { '#', ' ', ' ', ' ', ' ', ' ', 'e},
                {},
                {},
                {},
                {},
                { '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', '#'},
                {},
                {},
                {},
                {},
                {},
                {},
                { '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', '#'},
                {},
                { '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ', ' ', ' ', ' ', '#'},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
            };
            string dirChange = "Right";
            int points = 0;
            int health = 100;
            int enemyHealth = 100;
            PrintMaze(maze, points, health);
            while (true)
            {
                int bullet = 1;
                if (Keyboard.IsKeyPressed(Key.LeftArrow))
                {
                    movePlayerLeft(maze,ref points,ref health);
                    //PrintMaze(maze, points, health);
                    Console.WriteLine($"Score: {points} Health: {health} Enemy Hralth: {enemyHealth}");
                    moveFire(maze, ref enemyHealth);
                    delFire(maze, ref enemyHealth);
                    enemyBullet(maze) ;
                    enemyFire(maze);

                }
                if (Keyboard.IsKeyPressed(Key.RightArrow))
                {
                    movePlayerRight(maze,ref points,ref health);
                    //PrintMaze(maze, points, health);
                    Console.WriteLine($"Score: {points} Health: {health} Enemy Hralth: {enemyHealth}");
                    moveFire(maze, ref enemyHealth);
                    delFire(maze, ref enemyHealth);
                    enemyBullet(maze);
                    enemyFire(maze);

                }
                if (Keyboard.IsKeyPressed(Key.DownArrow))
                {
                    movePlayerDown(maze,ref points,ref health);
                    //PrintMaze(maze, points, health);
                    Console.WriteLine($"Score: {points} Health: {health} Enemy Hralth: {enemyHealth}");
                    moveFire(maze, ref enemyHealth);
                    delFire(maze, ref enemyHealth);
                    enemyBullet(maze);
                    enemyFire(maze);
                }
                if (Keyboard.IsKeyPressed(Key.UpArrow))
                {
                    movePlayerUp(maze,ref points,ref health);

                    //PrintMaze(maze, points, health);
                    Console.WriteLine($"Score: {points} Health: {health} Enemy Hralth: {enemyHealth}");
                    moveFire(maze, ref enemyHealth);
                    delFire(maze, ref enemyHealth);
                    enemyBullet(maze);
                    enemyFire(maze);
                }
                if (Keyboard.IsKeyPressed(Key.Space))
                {
                    fire(maze);
                    //PrintMaze(maze, points, health);
                    Console.WriteLine($"Score: {points} Health: {health} Enemy Hralth: {enemyHealth}");
                    moveFire(maze, ref enemyHealth);
                    delFire(maze, ref enemyHealth);
                    enemyBullet(maze);
                    enemyFire(maze);
                }
                //PrintMaze(maze, points, health);
                Console.WriteLine($"Score: {points} Health: {health} Enemy Hralth: {enemyHealth}");
                moveFire(maze, ref enemyHealth);
                delFire(maze,ref enemyHealth);
                enemyBullet(maze);
                enemyFire(maze);
                moveEnemy(dirChange, maze);
                dirChange = direction(dirChange, maze);
                Thread.Sleep(150);

            }

        }
        static void PrintMaze(char[,] data, int points, int health)
        {
            Console.Clear();
            /*Console.WriteLine($"Score: {points} \t\t\t\t Health: {health}");
            Console.WriteLine();
            Console.WriteLine();*/
            for (int i = 0; i < data.GetLength(0); i++)
            {
                for (int j = 0; j < data.GetLength(1); j++)
                {
                    Console.Write(data[i, j]);
                }
                Console.WriteLine();
            }
        }
        // need to make the movement more better
        static void movePlayerLeft(char[,] data,ref int points,ref int health)
        {
            for (int i = 0; i < data.GetLength(0); i++)
            {
                for (int j = 0; j < data.GetLength(1); j++)
                {
                    if (data[i, j] == 'P' && data[i, j - 1] == ' ')
                    {
                        data[i, j - 1] = 'P';
                        data[i, j] = ' ';
                        break;
                    }
                    if (data[i, j] == 'P' && data[i, j - 1] == '*')
                    {
                        data[i, j - 1] = 'P';
                        data[i, j] = ' ';
                        points += 25;
                        break;
                    }
                    if (data[i, j] == 'P' && data[i, j - 1] == ':')
                    {
                        data[i, j - 1] = 'P';
                        data[i, j] = ' ';
                        health -= 25;
                        break;
                    }
                }
            }
        }
        static void movePlayerRight(char[,] data,ref int points,ref int health)
        {
            for (int i = 0; i < data.GetLength(0); i++)
            {
                for (int j = 0; j < data.GetLength(1); j++)
                {
                    if (data[i, j] == 'P' && data[i, j + 1] == ' ')
                    {
                        data[i, j + 1] = 'P';
                        data[i, j] = ' ';
                        break;
                    }
                    if (data[i, j] == 'P' && data[i, j + 1] == '*')
                    {
                        data[i, j + 1] = 'P';
                        data[i, j] = ' ';
                        points += 25;
                        break;
                    }
                    if (data[i, j] == 'P' && data[i, j - 1] == ':')
                    {
                        data[i, j - 1] = 'P';
                        data[i, j] = ' ';
                        health -= 25;
                        break;
                    }
                }
            }
        }
        static void movePlayerDown(char[,] data,ref int points,ref int health)
        {
            int num = 0;
            for (int i = 0; i < data.GetLength(0); i++)
            {
                for (int j = 0; j < data.GetLength(1); j++)
                {
                    if (data[i, j] == 'P' && data[i + 1, j] == ' ')
                    {
                        data[i + 1, j] = 'P';
                        data[i, j] = ' ';
                        num = 1;
                    }
                    if (data[i, j] == 'P' && data[i + 1, j] == '*')
                    {
                        data[i + 1, j] = 'P';
                        data[i, j] = ' ';
                        points += 25;
                        num = 1;
                    }
                    if (data[i, j] == 'P' && data[i, j - 1] == ':')
                    {
                        data[i, j - 1] = 'P';
                        data[i, j] = ' ';
                        health -= 25;
                        break;
                    }
                    if (num == 1)
                    {
                        break;
                    }

                }
            }
        }
        static void movePlayerUp(char[,] data,ref int points,ref int health)

        {
            for (int i = 0; i < data.GetLength(0); i++)
            {
                for (int j = 0; j < data.GetLength(1); j++)
                {
                    if (data[i, j] == 'P' && data[i - 1, j] == ' ')
                    {
                        data[i - 1, j] = 'P';
                        data[i, j] = ' ';
                        break;
                    }
                    if (data[i, j] == 'P' && data[i - 1, j] == '*')
                    {
                        data[i - 1, j] = 'P';
                        data[i, j] = ' ';
                        points += 25;
                        break;
                    }
                    if (data[i, j] == 'P' && data[i, j - 1] == ':')
                    {
                        data[i, j - 1] = 'P';
                        data[i, j] = ' ';
                        health -= 25;
                        break;
                    }
                }
            }
        }
        // need to make the shooting even better
        static void fire(char[,] data)
        {

            for (int i = 0; i < data.GetLength(0); i++)
            {
                for (int j = 0; j < data.GetLength(1); j++)
                {
                    if ((data[i, j] == 'P' && data[i - 1, j] == ' '))
                    {
                        data[i - 1, j] = '.';
                        break;
                    }
                }
                Console.WriteLine();
            }
        }
        static void moveFire(char[,] data,ref int enemyHealth)
        {
            for (int i = 0; i < data.GetLength(0); i++)
            {
                for (int j = 0; j < data.GetLength(1); j++)
                {
                    if (data[i, j] == '.' && data[i - 1, j] == ' ')
                    {
                        data[i - 1, j] = '.';
                        data[i, j] = ' ';
                        break;
                    }
                    else if (data[i, j] == '.' && data[i - 1, j] == 'e')
                    {
                        if (data[i - 1, j] != '#')
                        {

                            data[i - 1, j] = 'e';
                            data[i, j] = ' ';
                            enemyHealth -= 25;
                            break;
                        }
                    }
                }
            }
        }
        static void delFire(char[,] data,ref int enemyHealth)
        {
            for (int i = 0; i < data.GetLength(0); i++)
            {
                for (int j = 0; j < data.GetLength(1); j++)
                {
                    if (data[i, j] == '.' && data[i - 1, j] == '#')
                    {
                        data[i, j] = ' ';
                        break;
                    }
                    else if (data[i, j] == '.' && data[i - 1, j] != '#')
                    {
                        if (data[i, j] == ' ')
                        {
                            data[i - 1, j] = ' ';
                            enemyHealth -= 25;
                            break;
                        }
                    }
                }
            }
        }
        static void moveEnemy(string dirChange, char[,] data)
        {
            int count = 0;
            for (int i = 0; i < data.GetLength(0); i++)
            {
                for (int j = 0; j < data.GetLength(1); j++)
                {
                    if (data[i, j] == 'e' && dirChange == "Right")
                    {
                        if (data[i, j + 1] == ' ')
                        {
                            data[i, j + 1] = 'e';
                            data[i, j] = ' ';
                            count = 1;
                        }
                        break;
                    }
                    else if (data[i, j] == 'e' && dirChange == "Left")
                    {
                        if (data[i, j - 1] == ' ')
                        {
                            data[i, j - 1] = 'e';
                            data[i, j] = ' ';
                            count = 1;
                        }
                        break;
                    }
                    if (count == 1)
                    {
                        break;
                    }
                }
            }
        }
        // error in changing direction
        static string direction(string dirChange, char[,] data)
        {
            for (int i = 0; i < data.GetLength(0) - 1; i++)
            {
                for (int j = 1; j < data.GetLength(1) - 1; j++)
                {
                    if (data[i, j] == 'e')
                    {
                        if (data[i, j + 1] == '#')
                        {
                            if (dirChange == "Right")
                            {
                                dirChange = "Left";
                                return dirChange;
                            }
                        }
                        else if (data[i, j - 1] == '#')
                        {
                            if (dirChange == "Left")
                            {
                                dirChange = "Right";
                                return dirChange;
                            }
                        }
                    }
                }
            }
            return dirChange;
        }
        static void enemyFire(char[,] data)
        {
            for (int i = 0; i < data.GetLength(0); i++)
            {
                for (int j = 0; j < data.GetLength(1); j++)
                {
                    if (data[i, j] == 'e')
                    {
                        if (data[i + 1, j] == ' ')
                        {
                            data[i + 1, j] = ':';
                            break;
                        }
                    }
                }
            }
        }
        static int enemyBullet(char[,] data)
        {
            for (int i = 0; i < data.GetLength(0); i++)
            {
                for (int j = 0; j < data.GetLength(1); j++)
                {
                    if (data[i, j] == ':' && data[i + 1, j] == ' ')
                    {
                        data[i + 1, j] = ':';
                        data[i, j] = ' ';
                        break;

                    }
                    if (data[i, j] == ':' && data[i + 1, j] != ' ')
                    {
                        if (data[i + 1, j] != '#')
                        {
                            data[i + 1, j] = ':';
                            data[i, j] = ' ';
                            break;
                        }
                    }
                }
            }
            Thread.Sleep(100);

            return 0;
        }
    }
}
